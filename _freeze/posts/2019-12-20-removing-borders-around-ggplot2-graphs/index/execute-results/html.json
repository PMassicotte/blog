{
  "hash": "73aacc102a60a50e84d3c072219b1738",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Removing borders around ggplot2 graphs\nauthor: Philippe Massicotte\ndate: '2019-12-20'\ncategories: [R, ggplot2]\nimage: 'img/preview.png'\n---\n\n\n\n\n\n\nRecently I was participating in the _30DayMapChallenge_ where people were invited to make a map based on a different daily theme for one whole month.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Announcing <a href=\"https://twitter.com/hashtag/30DayMapChallenge?src=hash&amp;ref_src=twsrc%5Etfw\">#30DayMapChallenge</a> in November 2019! Create a map each day of the month with the following themes üåçüåéüåè<br><br>No restriction on tools. All maps should be created by you. Doing less than 30 maps is fine. <a href=\"https://twitter.com/hashtag/gischat?src=hash&amp;ref_src=twsrc%5Etfw\">#gischat</a> <a href=\"https://twitter.com/hashtag/geography?src=hash&amp;ref_src=twsrc%5Etfw\">#geography</a> <a href=\"https://twitter.com/hashtag/cartography?src=hash&amp;ref_src=twsrc%5Etfw\">#cartography</a> <a href=\"https://twitter.com/hashtag/dataviz?src=hash&amp;ref_src=twsrc%5Etfw\">#dataviz</a> <a href=\"https://t.co/6Go4VFWcJB\">pic.twitter.com/6Go4VFWcJB</a></p>&mdash; Topi Tjukanov (@tjukanov) <a href=\"https://twitter.com/tjukanov/status/1187713840550744066?ref_src=twsrc%5Etfw\">October 25, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nWhen making a geographical map, or any other visualization where I wanted to use a _forced_ coordinate system), choosing the right aspect ratio to save my graphics has always been challenging. Lately, when participating in the map challenge, [C√©dric Scherer](https://cedricscherer.netlify.com/) made me realize that I was really struggling with white borders around my plots when it came the time to export them. **He was right!** :smile:\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">One question though: always wondering about your white space, do you not care and avoid to play around with the aspect ratio or is it on purpose?</p>&mdash; C√©dric Scherer (@CedScherer) <a href=\"https://twitter.com/CedScherer/status/1204062911016112128?ref_src=twsrc%5Etfw\">December 9, 2019</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n## The problem with choosing the right aspect ratio\n\nLet's make a simple map of the USA to illustrate the problem. In a markdown document, the generated graph looks good (i.e. no extra border) because `knitr` is taking care of this for me (more on that later).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the US shapefile\nstates <- st_as_sf(maps::map(\"state\", plot = FALSE, fill = TRUE))\n\np <- states %>%\n  ggplot() +\n  geom_sf(size = 0.25) + #<<\n  coord_sf(crs = 2163) +\n  theme(\n    panel.border = element_blank(),\n    axis.text = element_blank(),\n    panel.grid = element_blank(),\n    axis.ticks = element_blank(),\n    plot.background = element_rect(fill = \"#3c3c3c\"),\n    panel.background = element_rect(fill = \"#3c3c3c\")\n  )\n\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/map_ggplot2-1.png)\n:::\n:::\n\n\nWhen it comes time to save my plots, I usually use the PDF format file unless they contain too much point. In that case, I will use the PNG format. When saving a graph in a file, however, it is difficult to find the right aspect ratio when using coordinate system that forces a specified ratio between the physical representation of data units on the axes (ex.: `coord_fixed()`, `geom_sf()` or `coord_equal()`). To visualize the problem, I will save the previous plot using two different aspect ratios and then import them in my document to show you the difficulty of finding the right aspect ratio.\n\n### Aspect ratio of 7/4\n\nChoosing an aspect ratio of 7/4 creates white borders on the sides of the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile <- \"img/fig_border_7_4.png\"\n\nggsave(\n  file,\n  plot = p,\n  type = \"cairo\",\n  device = \"png\",\n  dpi = 600,\n  width = 7,\n  height = 4\n)\n```\n:::\n\n\n<img src=\"img/fig_border_7_4.png\" style=\"border:2px solid red;\" width=\"800\"/>\n\n### Aspect ratio of 6/7\n\nChoosing an aspect ratio of 6/7 creates white borders at the bottom and the top of the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile <- \"img/fig_border_6_7.png\"\n\nggsave(\n  file,\n  plot = p,\n  type = \"cairo\",\n  device = \"png\",\n  dpi = 600,\n  width = 6,\n  height = 7\n)\n```\n:::\n\n\n<img src=\"img/fig_border_6_7.png\" style=\"border:2px solid red;\" width=\"800\"/>\n\nAs it can be seen in the two figures above, there are two large white borders located either on the sides or above/below of the graph. It is because I have used `geom_sf()` which set automatically the aspect ratio of the plot to respect the chosen geographical coordinate system. Of course, I could play around with trials and errors to find the _best_ **width** and **hight** to use to save my plot.\n\nBut wait! **There is a much better way to do it!** :smirk: Actually, I found out there was a hidden gem in `knitr` that allows cropping (using either _pdfcrop_ or _convert_ functions) to remove borders around an image. In fact, this is the function that is used to automatically remove borders around images when knitting an R Markdown document in R (see the initial plot of this post without borders). The function `knitr::plot_crop(x)` (where _x_ is the filename of the plot to be cropped) will trim any existing images on your hard drive.\n\nFirst, let's create our plot in PDF format and use `knitr::plot_crop()` to remove the borders.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npdf_file <- \"img/fig_border.pdf\"\n\nggsave(\n  pdf_file,\n  device = cairo_pdf,\n  width = 5.51,\n  height = 4.68\n)\n\nknitr::plot_crop(pdf_file)\n#> [1] \"img/fig_border.pdf\"\n```\n:::\n\n\nAt this point, the borders have been removed from the original PDF. But what if you want to export this PDF into a bitmap image? This can be achieved using a combination of `pdftools::pdf_render_page()` and `png::writePNG()`. `pdftools::pdf_render_page()` will take the filename of a PDF file and render into a raw bitmap array whereas `png::writePNG()` will actually save the bitmap into a file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng_file <- \"img/fig_border_cropped.png\"\n\nbitmap <- pdftools::pdf_render_page(pdf_file, dpi = 600)\npng::writePNG(bitmap, png_file)\n```\n:::\n\n\n<img src=\"img/fig_border_cropped.png\" style=\"border:2px solid red;\" width=\"800\"/>\n\nBang! No more borders around our plot üëç\n\n<details>\n\n<summary>Session info</summary>\n\n\n::: {.cell}\n\n```\n#> ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n#>  setting  value\n#>  version  R version 4.4.0 (2024-04-24)\n#>  os       Ubuntu 24.04 LTS\n#>  system   x86_64, linux-gnu\n#>  ui       X11\n#>  language en_CA:en\n#>  collate  en_CA.UTF-8\n#>  ctype    en_CA.UTF-8\n#>  tz       America/Toronto\n#>  date     2024-05-02\n#>  pandoc   3.1.3 @ /usr/bin/ (via rmarkdown)\n#> \n#> ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n#>  ! package     * version date (UTC) lib source\n#>  P askpass       1.2.0   2023-09-03 [?] RSPM (R 4.4.0)\n#>  P cachem        1.0.8   2023-05-01 [?] RSPM (R 4.4.0)\n#>  P class         7.3-22  2023-05-03 [?] CRAN (R 4.4.0)\n#>  P classInt      0.4-10  2023-09-05 [?] RSPM (R 4.4.0)\n#>  P cli           3.6.2   2023-12-11 [?] RSPM (R 4.4.0)\n#>  P colorspace    2.1-0   2023-01-23 [?] RSPM (R 4.4.0)\n#>  P DBI           1.2.2   2024-02-16 [?] RSPM (R 4.4.0)\n#>  P devtools      2.4.5   2022-10-11 [?] RSPM\n#>  P digest        0.6.35  2024-03-11 [?] RSPM (R 4.4.0)\n#>  P dplyr       * 1.1.4   2023-11-17 [?] RSPM (R 4.4.0)\n#>  P e1071         1.7-14  2023-12-06 [?] RSPM (R 4.4.0)\n#>  P ellipsis      0.3.2   2021-04-29 [?] RSPM (R 4.4.0)\n#>  P evaluate      0.23    2023-11-01 [?] RSPM (R 4.4.0)\n#>  P extrafont     0.19    2023-01-18 [?] RSPM (R 4.4.0)\n#>  P extrafontdb   1.0     2012-06-11 [?] RSPM (R 4.4.0)\n#>  P fansi         1.0.6   2023-12-08 [?] RSPM (R 4.4.0)\n#>  P farver        2.1.1   2022-07-06 [?] CRAN (R 4.4.0)\n#>  P fastmap       1.1.1   2023-02-24 [?] RSPM (R 4.4.0)\n#>  P forcats     * 1.0.0   2023-01-29 [?] RSPM (R 4.4.0)\n#>  P fs            1.6.4   2024-04-25 [?] CRAN (R 4.4.0)\n#>  P generics      0.1.3   2022-07-05 [?] RSPM (R 4.4.0)\n#>  P ggplot2     * 3.5.1   2024-04-23 [?] RSPM (R 4.4.0)\n#>  P ggpmthemes  * 0.0.2   2024-05-02 [?] Github (pmassicotte/ggpmthemes@993d61e)\n#>  P glue          1.7.0   2024-01-09 [?] RSPM (R 4.4.0)\n#>  P gtable        0.3.5   2024-04-22 [?] RSPM (R 4.4.0)\n#>  P hms           1.1.3   2023-03-21 [?] RSPM (R 4.4.0)\n#>  P htmltools     0.5.8.1 2024-04-04 [?] RSPM (R 4.4.0)\n#>  P htmlwidgets   1.6.4   2023-12-06 [?] RSPM\n#>  P httpuv        1.6.15  2024-03-26 [?] RSPM (R 4.4.0)\n#>  P jsonlite      1.8.8   2023-12-04 [?] RSPM (R 4.4.0)\n#>  P KernSmooth    2.23-22 2023-07-10 [?] CRAN (R 4.4.0)\n#>  P knitr         1.46    2024-04-06 [?] RSPM (R 4.4.0)\n#>  P later         1.3.2   2023-12-06 [?] RSPM (R 4.4.0)\n#>  P lifecycle     1.0.4   2023-11-07 [?] RSPM (R 4.4.0)\n#>  P lubridate   * 1.9.3   2023-09-27 [?] RSPM (R 4.4.0)\n#>  P magrittr      2.0.3   2022-03-30 [?] RSPM (R 4.4.0)\n#>  P maps          3.4.2   2023-12-15 [?] RSPM (R 4.4.0)\n#>  P memoise       2.0.1   2021-11-26 [?] RSPM (R 4.4.0)\n#>  P mime          0.12    2021-09-28 [?] RSPM (R 4.4.0)\n#>  P miniUI        0.1.1.1 2018-05-18 [?] RSPM (R 4.4.0)\n#>  P munsell       0.5.1   2024-04-01 [?] CRAN (R 4.4.0)\n#>  P pdftools      3.4.0   2023-09-25 [?] RSPM (R 4.4.0)\n#>  P pillar        1.9.0   2023-03-22 [?] RSPM (R 4.4.0)\n#>  P pkgbuild      1.4.4   2024-03-17 [?] RSPM (R 4.4.0)\n#>  P pkgconfig     2.0.3   2019-09-22 [?] RSPM (R 4.4.0)\n#>  P pkgload       1.3.4   2024-01-16 [?] RSPM\n#>  P png           0.1-8   2022-11-29 [?] RSPM (R 4.4.0)\n#>  P processx      3.8.4   2024-03-16 [?] RSPM (R 4.4.0)\n#>  P profvis       0.3.8   2023-05-02 [?] RSPM\n#>  P promises      1.3.0   2024-04-05 [?] RSPM (R 4.4.0)\n#>  P proxy         0.4-27  2022-06-09 [?] RSPM (R 4.4.0)\n#>  P ps            1.7.6   2024-01-18 [?] RSPM (R 4.4.0)\n#>  P purrr       * 1.0.2   2023-08-10 [?] RSPM (R 4.4.0)\n#>  P qpdf          1.3.3   2024-03-25 [?] RSPM (R 4.4.0)\n#>  P quarto      * 1.4     2024-03-06 [?] RSPM\n#>  P R.cache       0.16.0  2022-07-21 [?] RSPM\n#>  P R.methodsS3   1.8.2   2022-06-13 [?] RSPM\n#>  P R.oo          1.26.0  2024-01-24 [?] RSPM\n#>  P R.utils       2.12.3  2023-11-18 [?] RSPM\n#>  P R6            2.5.1   2021-08-19 [?] RSPM (R 4.4.0)\n#>  P ragg          1.3.0   2024-03-13 [?] RSPM\n#>  P Rcpp          1.0.12  2024-01-09 [?] RSPM (R 4.4.0)\n#>  P readr       * 2.1.5   2024-01-10 [?] RSPM (R 4.4.0)\n#>  P remotes       2.5.0   2024-03-17 [?] RSPM\n#>  P renv          1.0.7   2024-04-11 [?] RSPM (R 4.4.0)\n#>  P rlang         1.1.3   2024-01-10 [?] RSPM (R 4.4.0)\n#>  P rmarkdown     2.26    2024-03-05 [?] RSPM (R 4.4.0)\n#>  P rstudioapi    0.16.0  2024-03-24 [?] RSPM\n#>  P Rttf2pt1      1.3.12  2023-01-22 [?] RSPM (R 4.4.0)\n#>  P scales        1.3.0   2023-11-28 [?] CRAN (R 4.4.0)\n#>  P sessioninfo   1.2.2   2021-12-06 [?] RSPM\n#>  P sf          * 1.0-16  2024-03-24 [?] RSPM (R 4.4.0)\n#>  P shiny         1.8.1.1 2024-04-02 [?] RSPM (R 4.4.0)\n#>  P stringi       1.8.3   2023-12-11 [?] RSPM (R 4.4.0)\n#>  P stringr     * 1.5.1   2023-11-14 [?] RSPM (R 4.4.0)\n#>  P styler      * 1.10.3  2024-04-07 [?] RSPM\n#>  P systemfonts   1.0.6   2024-03-07 [?] RSPM (R 4.4.0)\n#>  P textshaping   0.3.7   2023-10-09 [?] RSPM\n#>  P tibble      * 3.2.1   2023-03-20 [?] RSPM (R 4.4.0)\n#>  P tidyr       * 1.3.1   2024-01-24 [?] RSPM (R 4.4.0)\n#>  P tidyselect    1.2.1   2024-03-11 [?] RSPM (R 4.4.0)\n#>  P tidyverse   * 2.0.0   2023-02-22 [?] RSPM (R 4.4.0)\n#>  P timechange    0.3.0   2024-01-18 [?] RSPM (R 4.4.0)\n#>  P tinytex       0.50    2024-03-16 [?] RSPM (R 4.4.0)\n#>  P tzdb          0.4.0   2023-05-12 [?] RSPM (R 4.4.0)\n#>  P units         0.8-5   2023-11-28 [?] RSPM (R 4.4.0)\n#>  P urlchecker    1.0.1   2021-11-30 [?] RSPM\n#>  P usethis       2.2.3   2024-02-19 [?] RSPM\n#>  P utf8          1.2.4   2023-10-22 [?] RSPM (R 4.4.0)\n#>  P vctrs         0.6.5   2023-12-01 [?] RSPM (R 4.4.0)\n#>  P withr         3.0.0   2024-01-16 [?] RSPM (R 4.4.0)\n#>  P xfun          0.43    2024-03-25 [?] RSPM (R 4.4.0)\n#>  P xtable        1.8-4   2019-04-21 [?] RSPM (R 4.4.0)\n#>  P yaml          2.3.8   2023-12-11 [?] RSPM (R 4.4.0)\n#> \n#>  [1] /tmp/RtmpEjPIPN/renv-use-libpath-2dff356b38eac0\n#>  [2] /home/filoche/.cache/R/renv/sandbox/linux-ubuntu-noble/R-4.4/x86_64-pc-linux-gnu/a71ef467\n#> \n#>  P ‚îÄ‚îÄ Loaded and on-disk path mismatch.\n#> \n#> ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n```\n:::\n\n\n</details>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}