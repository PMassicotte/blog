---
title: 'Removing white spaces around plots in R Markdown / Quarto'
author: 'Philippe Massicotte'
date: '2022-08-15'
categories: [R, R tips]
# https://quarto.org/docs/websites/website-tools.html#preview-images
image: 'img/preview.png'
editor_options:
  chunk_output_type: console
---

```{r}
#| label: renv
#| include: false
# https://www.joelnitta.com/posts/2024-01-11_using_renv_with_blog/

renv::use(lockfile = "renv.lock")

library(quarto)
library(styler)
```

```{r setup}
#| include: false
library(sf)
library(ggplot2)
library(ggpmthemes)
library(rnaturalearth)
library(rnaturalearthdata)
library(magick)

theme_set(theme_minimal(base_family = "Montserrat"))
```

When plotting spatial data, such as a geographical map, maintaining a proper aspect ratio is [important](https://www.pmassicotte.com/posts/2019-12-20-removing-borders-around-ggplot2-graphs/). Whereas `knitr::plot_crop()` works fine to crop a file, how can we do the same operation for a figure inside an R Markdown or a Quarto document? Thanks to `knitr`, this can be done with a [hook](https://yihui.org/knitr/hooks/).

![Let's crop something! Photo by <a href="https://unsplash.com/@rozetsky?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Ant Rozetsky</a> on <a href="https://unsplash.com/s/photos/crop?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>](img/preview.png){fig-alt="Close up on a grain field" fig-align="center"}

I will use the polygon of Greenland to illustrate the issue.

```{r get-data}
greenland <-
  ne_countries(
    country = "greenland",
    returnclass = "sf",
    scale = "medium"
  )

# Find a proper projection
proj <- as.numeric(crsuggest::suggest_crs(greenland)$crs_code[1])
proj
```

If we plot the map, we can see that there are white spaces around the image to keep the proper aspect ratio. This is not a problem per se, but one might be interested to fill up the ploting area with the actual plot.

```{r plot-original}
#| echo: fenced
greenland |>
  ggplot() +
  geom_sf(size = 0.25) +
  coord_sf(crs = proj) +
  theme(
    plot.background = element_rect(fill = "#3c3c3c"),
    panel.border = element_rect(color = "red", fill = NA),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "#3c3c3c", color = "red"),
    axis.text = element_blank(),
    axis.ticks = element_blank()
  )
```

Now, I will create a hook named `crop` that is associated with the `knitr::hook_pdfcrop()` function.

```{r}
#| echo: fenced
knitr::knit_hooks$set(crop = knitr::hook_pdfcrop)
```

::: callout-note
Note that the [magick package](https://github.com/ropensci/magick/) and probably the underlying [system library](https://imagemagick.org/) need to be installed on your system to crop images.
:::

With that, we can use `crop: true` in a code chunk to call it and crop the displayed graph.

```{r plot-cropped}
#| echo: fenced
#| crop: true
greenland |>
  ggplot() +
  geom_sf(size = 0.25) +
  coord_sf(crs = proj) +
  theme(
    plot.background = element_rect(fill = "#3c3c3c"),
    panel.border = element_rect(color = "red", fill = NA),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "#3c3c3c", color = "red"),
    axis.text = element_blank(),
    axis.ticks = element_blank()
  )
```

Voil√† üëç, no more borders around the image.

<details>

<summary>Session info</summary>

```{r sessioninfo, echo = FALSE}
## Reproducibility info
options(width = 120)
devtools::session_info()
```

</details>
